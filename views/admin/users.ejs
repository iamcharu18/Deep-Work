<%- include('partials/header',{title: "View Categories" }); -%>

    <div class="col py-3">
        <div class="container-fluid">

            <h3>List of Admins (<%= admins.length %>)</h3>

            <div class="table-responsive-sm">
                <table class="table table-hover">
                    <thead>
                        <tr>
                            <th>ID</th>
                            <th>Username</th>
                            <th class="d-print-none">
                                <a class="btn btn-sm btn-success" href="create/" <%=super_admin ? ''
                                    : 'style=display:none;' %>>Add</a>
                            </th>

                        </tr>
                    </thead>
                    <tbody>
                        <% for (const admin of admins) { %>
                            <tr>
                                <td>
                                    <%= admin.id %>
                                </td>
                                <td>
                                    <%= admin.username %>
                                </td>
                                <td class="d-print-none" <%=super_admin ? '' : 'style=display:none;' %>>
                                    <a class="btn btn-sm btn-danger" href="delete/<%= admin.id %>"
                                        data-admin-id="<%= admin.id %>">Delete</a>
                                </td>
                            </tr>
                            <% } %>
                    </tbody>
                </table>
            </div>

            <div class="modal fade" id="createModal" tabindex="-1" role="dialog" aria-labelledby="createModalLabel"
                aria-hidden="true">
                <div class="modal-dialog modal-dialog-centered" role="document">
                    <div class="modal-content">
                        <div class="modal-header">
                            <h5 class="modal-title" id="AddModalLabel"></h5>
                            <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
                        </div>
                        <div class="modal-body">
                            <form onsubmit="event.preventDefault()">
                                <div class="mb-3">
                                    <label for="admin-username" class="col-form-label">Admin Username:</label>
                                    <input type="text" class="form-control" id="admin-username">
                                </div>
                                <div class="mb-3">
                                    <label for="admin-password" class="col-form-label">Password:</label>
                                    <input type="text" class="form-control" id="admin-password">
                                </div>
                                <p class="error-message" style="color: red;"></p>
                                <div class="mb-3">
                                    <label for="admin-cf-password" class="col-form-label">Confirm Password:</label>
                                    <input type="text" class="form-control" id="admin-cf-password">
                                </div>
                            </form>
                        </div>
                        <div class="modal-footer">
                            <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Cancel</button>
                            <button type="button" class="btn btn-danger modal-confirm-add">Add</button>
                        </div>
                    </div>
                </div>
            </div>

            <div class="modal fade" id="deleteModal" tabindex="-1" role="dialog" aria-labelledby="deleteModalLabel"
                aria-hidden="true">
                <div class="modal-dialog modal-dialog-centered" role="document">
                    <div class="modal-content">
                        <div class="modal-header">
                            <h5 class="modal-title" id="deleteModalLabel"></h5>
                            <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
                        </div>
                        <div class="modal-body">
                            Are you sure you want to delete this admin?
                        </div>
                        <div class="modal-footer">
                            <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Cancel</button>
                            <button type="button" class="btn btn-danger modal-confirm-delete">Delete</button>
                        </div>
                    </div>
                </div>
            </div>

        </div>

    </div>

    <script>
        // Get all the delete buttons
        const deleteButtons = document.querySelectorAll('a[href^="delete/"]');
        const addButtons = document.querySelectorAll('a[href^="create/"]');

        // Add a click event listener to each delete button
        deleteButtons.forEach(button => {
            button.addEventListener('click', e => {
                e.preventDefault();

                const adminId = button.dataset.adminId;
                console.log(adminId);
                const adminName = button.closest('tr').querySelector('td:nth-child(2)').textContent.trim();

                const modal = document.getElementById('deleteModal');
                const modalTitle = modal.querySelector('.modal-title');
                const confirmButton = modal.querySelector('.modal-confirm-delete');
                // Set the modal title and confirm button text
                modalTitle.textContent = `Delete "${adminName}"?`;
                confirmButton.textContent = `Delete`;

                // Set the delete URL as the href of the confirm button
                confirmButton.href = `del_admin/${adminId}`;

                // Show the modal
                $(modal).modal('show');
            });
        });

        addButtons.forEach(button => {
            button.addEventListener('click', e => {
                e.preventDefault();

                const modal = document.getElementById('createModal');
                const modalTitle = modal.querySelector('.modal-title');
                const confirmButton = modal.querySelector('.modal-confirm-add');

                // Set the modal title and confirm button text
                modalTitle.textContent = `Add New Admin`;
                confirmButton.textContent = `Add`;

                // Set the delete URL as the href of the confirm button
                confirmButton.href = `add_admin`;

                // Show the modal
                $(modal).modal('show');
            });
        });

        // Add a click event listener to the confirm button
        document.querySelector('.modal-confirm-add').addEventListener('click', async e => {
            e.preventDefault();

            const adminPassword = document.getElementById('admin-password').value;
            const adminConfirmPassword = document.getElementById('admin-cf-password').value;
            const errMsgEl = document.querySelector('.error-message');

            if (adminPassword !== adminConfirmPassword) {
                errMsgEl.textContent = "Passwords do not match.";
                return;
            }

            errMsgEl.textContent = "";
            let url = e.target.href;
            const adminName = document.getElementById('admin-username').value;
            let formData = new FormData();
            formData.append('username', adminName);
            formData.append('password', adminPassword);
            // console.log(Object.fromEntries(formData))
            let options = {
                method: "POST",
                headers: {
                    'Content-Type': 'application/json'
                },
                body: JSON.stringify(Object.fromEntries(formData))
            };

            try {
                const response = await fetch(url, options);
                if (response.status === 400) {
                    errMsgEl.textContent = "User already exists or some error Occurred";
                } else if (response.status === 200) {
                    console.log('success');
                    window.location.href = '/admin/users';
                }
                else {
                    console.log(response)
                }
            } catch (error) {
                console.error(error);
            }
        });

        // Add a click event listener to the confirm button
        document.querySelector('.modal-confirm-delete').addEventListener('click', async e => {
            // Redirect to the delete URL
            let url = e.target.href;
            // console.log(e.target.href);
            let options = { method: "POST", };
            await fetch(url, options)
                .then(function (response) {
                    return [response.status, response.text()];
                })
                .then(function (textData) {
                    if (textData[0] === 401) {
                        errMsgEl.textContent = "Invalid Username or password";
                    }
                    if (textData[0] === 200) {
                        console.log('success');
                        window.location.href = '/admin/users';
                    }
                });
            // window.location.href = e.target.href;
        });

    </script>
    <%- include('partials/footer'); -%>